{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar __jsx = React.createElement;\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // nodejs library to set properties for components\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\"; // core components\n\nimport styles from \"assets/jss/nextjs-material-kit-pro/components/parallaxStyle.js\";\nconst useStyles = makeStyles(styles);\nexport default function Parallax(props) {\n  let windowScrollTop = 0;\n  const [transform, setTransform] = React.useState(\"translate3d(0,\" + windowScrollTop + \"px,0)\");\n  React.useEffect(() => {\n    if (window.innerWidth >= 768) {\n      window.addEventListener(\"scroll\", resetTransform);\n    }\n\n    return function cleanup() {\n      if (window.innerWidth >= 768) {\n        window.removeEventListener(\"scroll\", resetTransform);\n      }\n    };\n  });\n\n  const resetTransform = () => {\n    var windowScrollTop = window.pageYOffset / 3;\n    setTransform(\"translate3d(0,\" + windowScrollTop + \"px,0)\");\n  };\n\n  const {\n    filter,\n    className,\n    children,\n    style,\n    image,\n    small\n  } = props;\n  const classes = useStyles();\n  const parallaxClasses = classNames({\n    [classes.parallax]: true,\n    [classes[filter + \"Color\"]]: filter !== undefined,\n    [classes.small]: small,\n    [className]: className !== undefined\n  });\n  return __jsx(\"div\", {\n    className: parallaxClasses,\n    style: _objectSpread({}, style, {\n      backgroundImage: \"url(\" + image + \")\",\n      transform: transform\n    })\n  }, children);\n}","map":null,"metadata":{},"sourceType":"module"}