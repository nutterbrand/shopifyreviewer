{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\"; // react components for routing our app without refresh\n\nimport Link from \"next/link\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // core components\n\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\"; // core components\n\nimport Button from \"components/CustomButtons/Button.js\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport sectionsStyle from \"assets/jss/nextjs-material-kit-pro/pages/presentationSections/sectionsStyle.js\"; // images array used in rendering a function for this section\n\nimport imgs from \"assets/img/assets-for-demo/sections/imgs.js\";\nvar useStyles = makeStyles(sectionsStyle);\nexport default function SectionSections() {\n  var renderContainerFluid = function renderContainerFluid(cssClass) {\n    return imgs.map(function (row) {\n      return __jsx(GridContainer, {\n        key: row[0]\n      }, row.map(function (el, index) {\n        return __jsx(GridItem, {\n          md: 3,\n          sm: 3,\n          xs: 12,\n          key: el + \"_\" + index,\n          className: cssClass\n        }, __jsx(\"img\", {\n          src: require(\"assets/img/assets-for-demo/sections/\".concat(el, \".jpg\")),\n          alt: el,\n          key: el[index]\n        }));\n      }));\n    });\n  };\n\n  var classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.sectionSections\n  }, __jsx(\"div\", {\n    className: classes.container\n  }, __jsx(GridContainer, {\n    justify: \"center\"\n  }, __jsx(GridItem, {\n    md: 8,\n    className: classNames(classes.mrAuto, classes.mlAuto)\n  }, __jsx(\"div\", {\n    className: classes.sectionDescription\n  }, __jsx(\"h2\", {\n    className: classes.title\n  }, \"Ready to Use Sections\"), __jsx(\"h5\", {\n    className: classes.description\n  }, \"Build your page section by section! We have created multiple options for you to put together and customise into pixel perfect pages. From headers to footers, you will be able to choose the best combination for your project.\"), __jsx(Link, {\n    href: \"/sections\"\n  }, __jsx(Button, {\n    color: \"rose\",\n    target: \"_blank\",\n    className: classes.navButton,\n    round: true\n  }, \"view all sections\")))))), __jsx(\"div\", {\n    className: classes.containerFluid\n  }, renderContainerFluid(classes.photoGallery)));\n}","map":null,"metadata":{},"sourceType":"module"}