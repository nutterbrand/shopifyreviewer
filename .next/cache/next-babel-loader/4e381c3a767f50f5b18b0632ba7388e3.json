{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // nodejs library to set properties for components\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\"; // import Card from \"@material-ui/core/Card\";\n// import CardContent from \"@material-ui/core/Card/CardContent\";\n// import CardHeader from \"@material-ui/core/Card/CardHeader\";\n\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\"; // core components\n\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport styles from \"assets/jss/nextjs-material-kit-pro/components/customTabsStyle.js\";\nconst useStyles = makeStyles(styles);\nexport default function CustomTabs(props) {\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, value) => {\n    setValue(value);\n  };\n\n  const {\n    headerColor,\n    title,\n    tabs,\n    rtlActive,\n    plainTabs\n  } = props;\n  const classes = useStyles();\n  const cardTitle = classNames({\n    [classes.cardTitle]: true,\n    [classes.cardTitleRTL]: rtlActive\n  });\n  const tabsContainer = classNames({\n    [classes.tabsContainer]: true,\n    [classes.tabsContainerRTL]: rtlActive\n  });\n  return __jsx(Card, {\n    plain: plainTabs\n  }, __jsx(CardHeader, {\n    color: headerColor,\n    plain: plainTabs\n  }, title !== undefined ? __jsx(\"div\", {\n    className: cardTitle\n  }, \"title\") : null, __jsx(Tabs, {\n    classes: {\n      root: classes.customTabsRoot,\n      flexContainer: tabsContainer,\n      indicator: classes.displayNone\n    },\n    value: value,\n    onChange: handleChange,\n    textColor: \"inherit\"\n  }, tabs.map((prop, key) => {\n    var icon = {};\n\n    if (prop.tabIcon !== undefined) {\n      icon = {\n        icon: __jsx(prop.tabIcon, {\n          className: classes.tabIcon\n        })\n      };\n    } else {\n      icon = {};\n    }\n\n    return __jsx(Tab, _extends({\n      key: key,\n      classes: {\n        root: classes.customTabRoot,\n        selected: classes.customTabSelected,\n        wrapper: classes.customTabWrapper\n      } // icon={<prop.tabIcon className={tabIcon} />}\n\n    }, icon, {\n      label: prop.tabName\n    }));\n  }))), __jsx(CardBody, null, tabs.map((prop, key) => {\n    if (key === value) {\n      return __jsx(\"div\", {\n        key: key\n      }, prop.tabContent);\n    }\n\n    return null;\n  })));\n}\nCustomTabs.defaultProps = {\n  headerColor: \"purple\"\n};","map":null,"metadata":{},"sourceType":"module"}