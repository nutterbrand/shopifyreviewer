{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\n\n/*eslint-disable*/\nimport React from \"react\"; // react plugin for creating date-time-picker\n\nimport Datetime from \"react-datetime\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n\nimport LibraryBooks from \"@material-ui/icons/LibraryBooks\";\nimport Close from \"@material-ui/icons/Close\";\nimport Notifications from \"@material-ui/icons/Notifications\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport Assignment from \"@material-ui/icons/Assignment\";\nimport Mail from \"@material-ui/icons/Mail\";\nimport Face from \"@material-ui/icons/Face\";\nimport Timeline from \"@material-ui/icons/Timeline\";\nimport Code from \"@material-ui/icons/Code\";\nimport Group from \"@material-ui/icons/Group\";\nimport Email from \"@material-ui/icons/Email\";\nimport Check from \"@material-ui/icons/Check\";\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport Layers from \"@material-ui/icons/Layers\"; // core components\n\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Instruction from \"components/Instruction/Instruction.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport CustomFileInput from \"components/CustomFileInput/CustomFileInput.js\";\nimport InfoArea from \"components/InfoArea/InfoArea.js\";\nimport Accordion from \"components/Accordion/Accordion.js\";\nimport ImageUpload from \"components/CustomUpload/ImageUpload.js\";\nimport javascriptStyles from \"assets/jss/nextjs-material-kit-pro/pages/componentsSections/javascriptStyles.js\";\nimport dg1 from \"assets/img/dg1.jpg\";\nimport dg2 from \"assets/img/dg2.jpg\";\nconst useStyles = makeStyles(javascriptStyles);\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return __jsx(Slide, _extends({\n    direction: \"down\",\n    ref: ref\n  }, props));\n});\nTransition.displayName = \"Transition\";\nexport default function SectionJavascript() {\n  const [anchorElLeft, setAnchorElLeft] = React.useState(null);\n  const [anchorElTop, setAnchorElTop] = React.useState(null);\n  const [anchorElBottom, setAnchorElBottom] = React.useState(null);\n  const [anchorElRight, setAnchorElRight] = React.useState(null);\n  const [checked, setChecked] = React.useState([]);\n  const [classicModal, setClassicModal] = React.useState(false);\n  const [noticeModal, setNoticeModal] = React.useState(false);\n  const [smallModal, setSmallModal] = React.useState(false);\n  const [loginModal, setLoginModal] = React.useState(false);\n  const [signupModal, setSignupModal] = React.useState(false);\n\n  const handleToggle = value => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.section + \" cd-section\",\n    id: \"javascriptComponents\"\n  }, __jsx(\"div\", {\n    className: classes.container\n  }, __jsx(\"div\", {\n    className: classes.title\n  }, __jsx(\"h2\", null, \"Javascript components\")), __jsx(GridContainer, null, __jsx(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 6\n  }, __jsx(\"div\", {\n    className: classes.title\n  }, __jsx(\"h3\", null, \"Modal\")), __jsx(GridContainer, null, __jsx(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 6,\n    lg: 4\n  }, __jsx(Button, {\n    block: true,\n    round: true,\n    onClick: () => setClassicModal(true)\n  }, __jsx(LibraryBooks, null), \"Classic\"), __jsx(Dialog, {\n    classes: {\n      root: classes.modalRoot,\n      paper: classes.modal\n    },\n    open: classicModal,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: () => setClassicModal(false),\n    \"aria-labelledby\": \"classic-modal-slide-title\",\n    \"aria-describedby\": \"classic-modal-slide-description\"\n  }, __jsx(DialogTitle, {\n    id: \"classic-modal-slide-title\",\n    disableTypography: true,\n    className: classes.modalHeader\n  }, __jsx(Button, {\n    simple: true,\n    className: classes.modalCloseButton,\n    key: \"close\",\n    \"aria-label\": \"Close\",\n    onClick: () => setClassicModal(false)\n  }, \" \", __jsx(Close, {\n    className: classes.modalClose\n  })), __jsx(\"h4\", {\n    className: classes.modalTitle\n  }, \"Modal title\")), __jsx(DialogContent, {\n    id: \"classic-modal-slide-description\",\n    className: classes.modalBody\n  }, __jsx(\"p\", null, \"Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. Separated they live in Bookmarksgrove right at the coast of the Semantics, a large language ocean. A small river named Duden flows by their place and supplies it with the necessary regelialia. It is a paradisematic country, in which roasted parts of sentences fly into your mouth. Even the all-powerful Pointing has no control about the blind texts it is an almost unorthographic life One day however a small line of blind text by the name of Lorem Ipsum decided to leave for the far World of Grammar.\")), __jsx(DialogActions, {\n    className: classes.modalFooter\n  }, __jsx(Button, {\n    link: true\n  }, \"Nice Button\"), __jsx(Button, {\n    onClick: () => setClassicModal(false),\n    color: \"danger\",\n    simple: true\n  }, \"Close\")))), __jsx(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 6,\n    lg: 4\n  }, __jsx(Button, {\n    block: true,\n    round: true,\n    onClick: () => setNoticeModal(true)\n  }, __jsx(Icon, null, \"info_outline\"), \" Notice\"), __jsx(Dialog, {\n    classes: {\n      root: classes.modalRoot,\n      paper: classes.modal\n    },\n    open: noticeModal,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: () => setNoticeModal(false),\n    \"aria-labelledby\": \"notice-modal-slide-title\",\n    \"aria-describedby\": \"notice-modal-slide-description\"\n  }, __jsx(DialogTitle, {\n    id: \"notice-modal-slide-title\",\n    disableTypography: true,\n    className: classes.modalHeader\n  }, __jsx(Button, {\n    simple: true,\n    className: classes.modalCloseButton,\n    key: \"close\",\n    \"aria-label\": \"Close\",\n    onClick: () => setNoticeModal(false)\n  }, \" \", __jsx(Close, {\n    className: classes.modalClose\n  })), __jsx(\"h4\", {\n    className: classes.modalTitle\n  }, \"How Do You Become an Affiliate?\")), __jsx(DialogContent, {\n    id: \"notice-modal-slide-description\",\n    className: classes.modalBody\n  }, __jsx(Instruction, {\n    title: \"1. Register\",\n    text: __jsx(\"span\", null, \"The first step is to create an account at\", \" \", __jsx(\"a\", {\n      href: \"https://www.creative-tim.com/?ref=njsmkp-javascript-components\",\n      target: \"_blank\"\n    }, \"Creative Tim\"), \". You can choose a social network or go for the classic version, whatever works best for you.\"),\n    image: dg1,\n    className: classes.instructionNoticeModal,\n    imageClassName: classes.imageNoticeModal\n  }), __jsx(Instruction, {\n    title: \"2. Apply\",\n    text: __jsx(\"span\", null, \"The first step is to create an account at\", \" \", __jsx(\"a\", {\n      href: \"https://www.creative-tim.com/?ref=njsmkp-javascript-components\",\n      target: \"_blank\"\n    }, \"Creative Tim\"), \". You can choose a social network or go for the classic version, whatever works best for you.\"),\n    image: dg2,\n    className: classes.instructionNoticeModal,\n    imageClassName: classes.imageNoticeModal\n  }), __jsx(\"p\", null, \"If you have more questions, don\", \"'\", \"t hesitate to contact us or send us a tweet @creativetim. We\", \"'\", \"re here to help!\")), __jsx(DialogActions, {\n    className: classes.modalFooter + \" \" + classes.modalFooterCenter\n  }, __jsx(Button, {\n    onClick: () => setNoticeModal(false),\n    color: \"info\",\n    round: true\n  }, \"Sounds Good\")))), __jsx(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 6,\n    lg: 4\n  }, __jsx(Button, {\n    block: true,\n    round: true,\n    onClick: () => setSmallModal(true)\n  }, __jsx(Notifications, null), \" Small Alert\"), __jsx(Dialog, {\n    classes: {\n      root: classes.modalRoot,\n      paper: classes.modal + \" \" + classes.modalSmall\n    },\n    open: smallModal,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: () => setSmallModal(false),\n    \"aria-labelledby\": \"small-modal-slide-title\",\n    \"aria-describedby\": \"small-modal-slide-description\"\n  }, __jsx(DialogTitle, {\n    id: \"small-modal-slide-title\",\n    disableTypography: true,\n    className: classes.modalHeader\n  }, __jsx(Button, {\n    simple: true,\n    className: classes.modalCloseButton,\n    key: \"close\",\n    \"aria-label\": \"Close\",\n    onClick: () => setSmallModal(false)\n  }, \" \", __jsx(Close, {\n    className: classes.modalClose\n  }))), __jsx(DialogContent, {\n    id: \"small-modal-slide-description\",\n    className: classes.modalBody + \" \" + classes.modalSmallBody\n  }, __jsx(\"h5\", null, \"Are you sure you want to do this?\")), __jsx(DialogActions, {\n    className: classes.modalFooter + \" \" + classes.modalFooterCenter\n  }, __jsx(Button, {\n    onClick: () => setSmallModal(false),\n    link: true,\n    className: classes.modalSmallFooterFirstButton\n  }, \"Never Mind\"), __jsx(Button, {\n    onClick: () => setSmallModal(false),\n    color: \"success\",\n    simple: true,\n    className: classes.modalSmallFooterFirstButton + \" \" + classes.modalSmallFooterSecondButton\n  }, \"Yes\"))))), __jsx(GridContainer, null, __jsx(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 6,\n    lg: 6\n  }, __jsx(Button, {\n    block: true,\n    round: true,\n    onClick: () => setLoginModal(true)\n  }, __jsx(AccountCircle, null), \" Login\"), __jsx(Dialog, {\n    classes: {\n      root: classes.modalRoot,\n      paper: classes.modal + \" \" + classes.modalLogin\n    },\n    open: loginModal,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: () => setLoginModal(false),\n    \"aria-labelledby\": \"login-modal-slide-title\",\n    \"aria-describedby\": \"login-modal-slide-description\"\n  }, __jsx(Card, {\n    plain: true,\n    className: classes.modalLoginCard\n  }, __jsx(DialogTitle, {\n    id: \"login-modal-slide-title\",\n    disableTypography: true,\n    className: classes.modalHeader\n  }, __jsx(CardHeader, {\n    plain: true,\n    color: \"primary\",\n    className: classes.textCenter + \" \" + classes.cardLoginHeader\n  }, __jsx(Button, {\n    simple: true,\n    className: classes.modalCloseButton,\n    key: \"close\",\n    \"aria-label\": \"Close\",\n    onClick: () => setLoginModal(false)\n  }, \" \", __jsx(Close, {\n    className: classes.modalClose\n  })), __jsx(\"h5\", {\n    className: classes.cardTitleWhite\n  }, \"Log in\"), __jsx(\"div\", {\n    className: classes.socialLine\n  }, __jsx(Button, {\n    justIcon: true,\n    link: true,\n    className: classes.socialLineButton\n  }, __jsx(\"i\", {\n    className: \"fab fa-facebook-square\"\n  })), __jsx(Button, {\n    justIcon: true,\n    link: true,\n    className: classes.socialLineButton\n  }, __jsx(\"i\", {\n    className: \"fab fa-twitter\"\n  })), __jsx(Button, {\n    justIcon: true,\n    link: true,\n    className: classes.socialLineButton\n  }, __jsx(\"i\", {\n    className: \"fab fa-google-plus-g\"\n  }))))), __jsx(DialogContent, {\n    id: \"login-modal-slide-description\",\n    className: classes.modalBody\n  }, __jsx(\"form\", null, __jsx(\"p\", {\n    className: classes.description + \" \" + classes.textCenter\n  }, \"Or Be Classical\"), __jsx(CardBody, {\n    className: classes.cardLoginBody\n  }, __jsx(CustomInput, {\n    id: \"login-modal-first\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      startAdornment: __jsx(InputAdornment, {\n        position: \"start\"\n      }, __jsx(Face, {\n        className: classes.icon\n      })),\n      placeholder: \"First Name...\"\n    }\n  }), __jsx(CustomInput, {\n    id: \"login-modal-email\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      startAdornment: __jsx(InputAdornment, {\n        position: \"start\"\n      }, __jsx(Mail, {\n        className: classes.icon\n      })),\n      placeholder: \"Email...\"\n    }\n  }), __jsx(CustomInput, {\n    id: \"login-modal-pass\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      startAdornment: __jsx(InputAdornment, {\n        position: \"start\"\n      }, __jsx(Icon, {\n        className: classes.icon\n      }, \"lock_outline\")),\n      placeholder: \"Password...\"\n    }\n  })))), __jsx(DialogActions, {\n    className: classes.modalFooter + \" \" + classes.justifyContentCenter\n  }, __jsx(Button, {\n    color: \"primary\",\n    simple: true,\n    size: \"lg\"\n  }, \"Get started\"))))), __jsx(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 6,\n    lg: 6\n  }, __jsx(Button, {\n    block: true,\n    round: true,\n    onClick: () => setSignupModal(true)\n  }, __jsx(Assignment, null), \" Signup\"), __jsx(Dialog, {\n    classes: {\n      root: classes.modalRoot,\n      paper: classes.modal + \" \" + classes.modalSignup\n    },\n    open: signupModal,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: () => setSignupModal(false),\n    \"aria-labelledby\": \"signup-modal-slide-title\",\n    \"aria-describedby\": \"signup-modal-slide-description\"\n  }, __jsx(Card, {\n    plain: true,\n    className: classes.modalSignupCard\n  }, __jsx(DialogTitle, {\n    id: \"signup-modal-slide-title\",\n    disableTypography: true,\n    className: classes.modalHeader\n  }, __jsx(Button, {\n    simple: true,\n    className: classes.modalCloseButton,\n    key: \"close\",\n    \"aria-label\": \"Close\",\n    onClick: () => setSignupModal(false)\n  }, \" \", __jsx(Close, {\n    className: classes.modalClose\n  })), __jsx(\"h3\", {\n    className: classes.cardTitle + \" \" + classes.modalTitle\n  }, \"Register\")), __jsx(DialogContent, {\n    id: \"signup-modal-slide-description\",\n    className: classes.modalBody\n  }, __jsx(GridContainer, null, __jsx(GridItem, {\n    xs: 12,\n    sm: 5,\n    md: 5,\n    className: classes.mlAuto\n  }, __jsx(InfoArea, {\n    className: classes.infoArea,\n    title: \"Marketing\",\n    description: __jsx(\"p\", null, \"We\", \"'\", \"ve created the marketing campaign of the website. It was a very interesting collaboration.\"),\n    icon: Timeline,\n    iconColor: \"rose\"\n  }), __jsx(InfoArea, {\n    className: classes.infoArea,\n    title: \"Fully Coded in HTML5\",\n    description: __jsx(\"p\", null, \"We\", \"'\", \"ve developed the website with HTML5 and CSS3. The client has access to the code using GitHub.\"),\n    icon: Code,\n    iconColor: \"primary\"\n  }), __jsx(InfoArea, {\n    className: classes.infoArea,\n    title: \"Built Audience\",\n    description: __jsx(\"p\", null, \"There is also a Fully Customizable CMS Admin Dashboard for this product.\"),\n    icon: Group,\n    iconColor: \"info\"\n  })), __jsx(GridItem, {\n    xs: 12,\n    sm: 5,\n    md: 5,\n    className: classes.mrAuto\n  }, __jsx(\"div\", {\n    className: classes.textCenter\n  }, __jsx(Button, {\n    justIcon: true,\n    round: true,\n    color: \"twitter\"\n  }, __jsx(\"i\", {\n    className: \"fab fa-twitter\"\n  })), ` `, __jsx(Button, {\n    justIcon: true,\n    round: true,\n    color: \"dribbble\"\n  }, __jsx(\"i\", {\n    className: \"fab fa-dribbble\"\n  })), ` `, __jsx(Button, {\n    justIcon: true,\n    round: true,\n    color: \"facebook\"\n  }, __jsx(\"i\", {\n    className: \"fab fa-facebook-f\"\n  })), ` `, __jsx(\"h4\", {\n    className: classes.socialTitle\n  }, \"or be classical\")), __jsx(\"form\", {\n    className: classes.form\n  }, __jsx(CustomInput, {\n    formControlProps: {\n      fullWidth: true,\n      className: classes.customFormControlClasses\n    },\n    inputProps: {\n      startAdornment: __jsx(InputAdornment, {\n        position: \"start\",\n        className: classes.inputAdornment\n      }, __jsx(Face, {\n        className: classes.inputAdornmentIcon\n      })),\n      placeholder: \"First Name...\"\n    }\n  }), __jsx(CustomInput, {\n    formControlProps: {\n      fullWidth: true,\n      className: classes.customFormControlClasses\n    },\n    inputProps: {\n      startAdornment: __jsx(InputAdornment, {\n        position: \"start\",\n        className: classes.inputAdornment\n      }, __jsx(Email, {\n        className: classes.inputAdornmentIcon\n      })),\n      placeholder: \"Email...\"\n    }\n  }), __jsx(CustomInput, {\n    formControlProps: {\n      fullWidth: true,\n      className: classes.customFormControlClasses\n    },\n    inputProps: {\n      startAdornment: __jsx(InputAdornment, {\n        position: \"start\",\n        className: classes.inputAdornment\n      }, __jsx(Icon, {\n        className: classes.inputAdornmentIcon\n      }, \"lock_outline\")),\n      placeholder: \"Password...\"\n    }\n  }), __jsx(FormControlLabel, {\n    classes: {\n      label: classes.label\n    },\n    control: __jsx(Checkbox, {\n      tabIndex: -1,\n      onClick: () => handleToggle(1),\n      checkedIcon: __jsx(Check, {\n        className: classes.checkedIcon\n      }),\n      icon: __jsx(Check, {\n        className: classes.uncheckedIcon\n      }),\n      classes: {\n        checked: classes.checked,\n        root: classes.checkRoot\n      }\n    }),\n    label: __jsx(\"span\", null, \"I agree to the\", \" \", __jsx(\"a\", {\n      href: \"#pablo\"\n    }, \"terms and conditions\"), \".\")\n  }), __jsx(\"div\", {\n    className: classes.textCenter\n  }, __jsx(Button, {\n    round: true,\n    color: \"primary\"\n  }, \"Get started\")))))))))), __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12\n  }, __jsx(\"div\", {\n    className: classes.title\n  }, __jsx(\"h3\", null, \"Datetime Picker\")), __jsx(GridContainer, null, __jsx(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 6\n  }, __jsx(InputLabel, {\n    className: classes.label\n  }, \"Datetime Picker\"), __jsx(\"br\", null), __jsx(FormControl, {\n    fullWidth: true\n  }, __jsx(Datetime, {\n    inputProps: {\n      placeholder: \"Datetime Picker Here\"\n    }\n  })), __jsx(InputLabel, {\n    className: classes.label\n  }, \"Date Picker\"), __jsx(\"br\", null), __jsx(FormControl, {\n    fullWidth: true\n  }, __jsx(Datetime, {\n    timeFormat: false,\n    inputProps: {\n      placeholder: \"Date Picker Here\"\n    }\n  })), __jsx(InputLabel, {\n    className: classes.label\n  }, \"Time Picker\"), __jsx(\"br\", null), __jsx(FormControl, {\n    fullWidth: true\n  }, __jsx(Datetime, {\n    dateFormat: false,\n    inputProps: {\n      placeholder: \"Time Picker Here\"\n    }\n  })))))), __jsx(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 6\n  }, __jsx(\"div\", {\n    className: classes.title\n  }, __jsx(\"h3\", null, \"Popovers\")), __jsx(Button, {\n    onClick: event => setAnchorElLeft(event.currentTarget)\n  }, \"On left\"), __jsx(Popover, {\n    classes: {\n      paper: classes.popover\n    },\n    open: Boolean(anchorElLeft),\n    anchorEl: anchorElLeft,\n    onClose: () => setAnchorElLeft(null),\n    anchorOrigin: {\n      vertical: \"center\",\n      horizontal: \"left\"\n    },\n    transformOrigin: {\n      vertical: \"center\",\n      horizontal: \"right\"\n    }\n  }, __jsx(\"h3\", {\n    className: classes.popoverHeader\n  }, \"Popover on left\"), __jsx(\"div\", {\n    className: classes.popoverBody\n  }, \"Here will be some very useful information about his popover. Here will be some very useful information about his popover.\")), __jsx(Button, {\n    onClick: event => setAnchorElTop(event.currentTarget)\n  }, \"On top\"), __jsx(Popover, {\n    classes: {\n      paper: classes.popover\n    },\n    open: Boolean(anchorElTop),\n    anchorEl: anchorElTop,\n    onClose: () => setAnchorElTop(null),\n    anchorOrigin: {\n      vertical: \"top\",\n      horizontal: \"center\"\n    },\n    transformOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    }\n  }, __jsx(\"h3\", {\n    className: classes.popoverHeader\n  }, \"Popover on top\"), __jsx(\"div\", {\n    className: classes.popoverBody\n  }, \"Here will be some very useful information about his popover.\")), __jsx(Button, {\n    onClick: event => setAnchorElBottom(event.currentTarget)\n  }, \"On bottom\"), __jsx(Popover, {\n    classes: {\n      paper: classes.popover\n    },\n    open: Boolean(anchorElBottom),\n    anchorEl: anchorElBottom,\n    onClose: () => setAnchorElBottom(null),\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"center\"\n    }\n  }, __jsx(\"h3\", {\n    className: classes.popoverHeader\n  }, \"Popover on bottom\"), __jsx(\"div\", {\n    className: classes.popoverBody\n  }, \"Here will be some very useful information about his popover.\")), __jsx(Button, {\n    onClick: event => setAnchorElRight(event.currentTarget)\n  }, \"On right\"), __jsx(Popover, {\n    classes: {\n      paper: classes.popover\n    },\n    open: Boolean(anchorElRight),\n    anchorEl: anchorElRight,\n    onClose: () => setAnchorElRight(null),\n    anchorOrigin: {\n      vertical: \"center\",\n      horizontal: \"right\"\n    },\n    transformOrigin: {\n      vertical: \"center\",\n      horizontal: \"left\"\n    }\n  }, __jsx(\"h3\", {\n    className: classes.popoverHeader\n  }, \"Popover on right\"), __jsx(\"div\", {\n    className: classes.popoverBody\n  }, \"Here will be some very useful information about his popover.\")), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"div\", {\n    className: classes.title\n  }, __jsx(\"h3\", null, \"Tooltips\")), __jsx(Tooltip, {\n    id: \"tooltip-left\",\n    title: \"Tooltip on left\",\n    placement: \"left\",\n    classes: {\n      tooltip: classes.tooltip\n    }\n  }, __jsx(Button, null, \"On left\")), __jsx(Tooltip, {\n    id: \"tooltip-top\",\n    title: \"Tooltip on top\",\n    placement: \"top\",\n    classes: {\n      tooltip: classes.tooltip\n    }\n  }, __jsx(Button, null, \"On top\")), __jsx(Tooltip, {\n    id: \"tooltip-bottom\",\n    title: \"Tooltip on bottom\",\n    placement: \"bottom\",\n    classes: {\n      tooltip: classes.tooltip\n    }\n  }, __jsx(Button, null, \"On bottom\")), __jsx(Tooltip, {\n    id: \"tooltip-right\",\n    title: \"Tooltip on right\",\n    placement: \"right\",\n    classes: {\n      tooltip: classes.tooltip\n    }\n  }, __jsx(Button, null, \"On right\")))), __jsx(\"div\", {\n    id: \"collapse\"\n  }, __jsx(\"div\", {\n    className: classes.title\n  }, __jsx(\"h3\", null, \"Collapse\")), __jsx(GridContainer, null, __jsx(GridItem, {\n    xs: 12,\n    sm: 8,\n    md: 8\n  }, __jsx(Accordion, {\n    active: 0,\n    activeColor: \"rose\",\n    collapses: [{\n      title: \"Collapsible group Item #1\",\n      content: \"Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.\"\n    }, {\n      title: \"Collapsible group Item #2\",\n      content: \"Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.\"\n    }, {\n      title: \"Collapsible group Item #3\",\n      content: \"Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.\"\n    }]\n  })))), __jsx(\"div\", {\n    className: classes.space50\n  }), __jsx(\"div\", {\n    id: \"file-uploader\"\n  }, __jsx(\"div\", {\n    className: classes.title\n  }, __jsx(\"h3\", null, \"File Uploader\")), __jsx(GridContainer, null, __jsx(GridItem, {\n    xs: 12,\n    sm: 5,\n    md: 5\n  }, __jsx(\"h4\", null, \"Regular Image\"), __jsx(ImageUpload, {\n    addButtonProps: {\n      round: true\n    },\n    changeButtonProps: {\n      round: true\n    },\n    removeButtonProps: {\n      round: true,\n      color: \"danger\"\n    }\n  })), __jsx(GridItem, {\n    xs: 12,\n    sm: 3,\n    md: 3\n  }, __jsx(\"h4\", null, \"Avatar\"), __jsx(ImageUpload, {\n    avatar: true,\n    addButtonProps: {\n      round: true\n    },\n    changeButtonProps: {\n      round: true\n    },\n    removeButtonProps: {\n      round: true,\n      color: \"danger\"\n    }\n  })), __jsx(GridItem, {\n    xs: 12,\n    sm: 3,\n    md: 3\n  }, __jsx(\"h4\", null, \"Simple Material Input\"), __jsx(CustomFileInput, {\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      placeholder: \"Simple chooser...\"\n    }\n  }), __jsx(CustomFileInput, {\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      placeholder: \"Single File...\"\n    },\n    endButton: {\n      buttonProps: {\n        round: true,\n        color: \"primary\",\n        justIcon: true,\n        fileButton: true\n      },\n      icon: __jsx(AttachFile, null)\n    }\n  }), __jsx(CustomFileInput, {\n    multiple: true,\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      placeholder: \"Multiple File...\"\n    },\n    endButton: {\n      buttonProps: {\n        round: true,\n        color: \"info\",\n        justIcon: true,\n        fileButton: true\n      },\n      icon: __jsx(Layers, null)\n    }\n  })))), __jsx(\"div\", {\n    className: classes.title\n  }, __jsx(\"h3\", null, \"Carousel\"))));\n}","map":null,"metadata":{},"sourceType":"module"}