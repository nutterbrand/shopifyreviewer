{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from \"react\"; // nodejs library to set properties for components\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\"; // @material-ui/icons\n\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport styles from \"assets/jss/nextjs-material-kit-pro/components/accordionStyle.js\";\nvar useStyles = makeStyles(styles);\nexport default function Accordion(props) {\n  var _React$useState = React.useState(props.active.length === undefined ? [props.active] : props.active),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      active = _React$useState2[0],\n      setActive = _React$useState2[1];\n\n  var _React$useState3 = React.useState(props.active.length === undefined ? true : false),\n      _React$useState4 = _slicedToArray(_React$useState3, 1),\n      single = _React$useState4[0];\n\n  var handleChange = function handleChange(panel) {\n    return function () {\n      var newArray;\n\n      if (single) {\n        if (active[0] === panel) {\n          newArray = [];\n        } else {\n          newArray = [panel];\n        }\n      } else {\n        if (active.indexOf(panel) === -1) {\n          newArray = [].concat(_toConsumableArray(active), [panel]);\n        } else {\n          newArray = _toConsumableArray(active);\n          newArray.splice(active.indexOf(panel), 1);\n        }\n      }\n\n      setActive(newArray);\n    };\n  };\n\n  var collapses = props.collapses,\n      activeColor = props.activeColor;\n  var classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root\n  }, collapses.map(function (prop, key) {\n    return __jsx(ExpansionPanel, {\n      expanded: active === key || active.indexOf(key) !== -1,\n      onChange: handleChange(key),\n      key: key,\n      classes: {\n        root: classes.expansionPanel,\n        expanded: classes.expansionPanelExpanded\n      }\n    }, __jsx(ExpansionPanelSummary, {\n      expandIcon: __jsx(ExpandMore, null),\n      classes: {\n        root: \"\".concat(classes.expansionPanelSummary, \" \").concat(classes[activeColor + \"ExpansionPanelSummary\"]),\n        expanded: \"\".concat(classes.expansionPanelSummaryExpaned, \" \").concat(classes[activeColor + \"ExpansionPanelSummaryExpaned\"]),\n        content: classes.expansionPanelSummaryContent,\n        expandIcon: classes.expansionPanelSummaryExpandIcon\n      }\n    }, __jsx(\"h4\", {\n      className: classes.title\n    }, prop.title)), __jsx(ExpansionPanelDetails, {\n      className: classes.expansionPanelDetails\n    }, prop.content));\n  }));\n}\nAccordion.defaultProps = {\n  active: -1,\n  activeColor: \"primary\"\n};","map":null,"metadata":{},"sourceType":"module"}