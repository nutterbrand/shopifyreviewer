{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Tooltip from \"@material-ui/core/Tooltip\"; // @material-ui/core icons\n\nimport Person from \"@material-ui/icons/Person\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport Close from \"@material-ui/icons/Close\";\nimport Check from \"@material-ui/icons/Check\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport Add from \"@material-ui/icons/Add\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport Reply from \"@material-ui/icons/Reply\";\nimport Favorite from \"@material-ui/icons/Favorite\"; // core components\n\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Table from \"components/Table/Table.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Media from \"components/Media/Media.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Paginations from \"components/Pagination/Pagination.js\";\nimport style from \"assets/jss/nextjs-material-kit-pro/pages/componentsSections/contentAreas.js\";\nimport avatar from \"assets/img/faces/avatar.jpg\";\nimport kendall from \"assets/img/faces/kendall.jpg\";\nimport marc from \"assets/img/faces/marc.jpg\";\nimport placeholder from \"assets/img/placeholder.jpg\";\nimport product1 from \"assets/img/product1.jpg\";\nimport product2 from \"assets/img/product2.jpg\";\nimport product3 from \"assets/img/product3.jpg\";\nvar useStyles = makeStyles(style);\nexport default function SectionContentAreas() {\n  var _React$useState = React.useState([1, 3, 5]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checked = _React$useState2[0],\n      setChecked = _React$useState2[1];\n\n  var handleToggle = function handleToggle(value) {\n    var currentIndex = checked.indexOf(value);\n\n    var newChecked = _toConsumableArray(checked);\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  var classes = useStyles();\n  var fillButtons = [{\n    color: \"info\",\n    icon: Person\n  }, {\n    color: \"success\",\n    icon: Edit\n  }, {\n    color: \"danger\",\n    icon: Close\n  }].map(function (prop, key) {\n    return __jsx(Button, {\n      justIcon: true,\n      size: \"sm\",\n      color: prop.color,\n      key: key\n    }, __jsx(prop.icon, null));\n  });\n  var simpleButtons = [{\n    color: \"info\",\n    icon: Person\n  }, {\n    color: \"success\",\n    icon: Edit\n  }, {\n    color: \"danger\",\n    icon: Close\n  }].map(function (prop, key) {\n    return __jsx(Button, {\n      simple: true,\n      justIcon: true,\n      size: \"sm\",\n      color: prop.color,\n      key: key\n    }, __jsx(prop.icon, null));\n  });\n  var roundButtons = [{\n    color: \"info\",\n    icon: Person\n  }, {\n    color: \"success\",\n    icon: Edit\n  }, {\n    color: \"danger\",\n    icon: Close\n  }].map(function (prop, key) {\n    return __jsx(Button, {\n      round: true,\n      justIcon: true,\n      size: \"sm\",\n      color: prop.color,\n      key: key\n    }, __jsx(prop.icon, null));\n  });\n  return __jsx(\"div\", {\n    className: \"cd-section\",\n    id: \"contentAreas\"\n  }, __jsx(\"h2\", null, \"Content Areas\"), __jsx(\"div\", {\n    id: \"tables\"\n  }, __jsx(\"div\", {\n    className: classes.title\n  }, __jsx(\"h3\", null, \"Tables\")), __jsx(GridContainer, null, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12\n  }, __jsx(\"h4\", null, \"Simple Table\")), __jsx(GridItem, {\n    xs: 12,\n    sm: 10,\n    md: 8,\n    className: classes.mrAuto + \" \" + classes.mlAuto\n  }, __jsx(\"h4\", null, __jsx(\"small\", null, \"Simple With Actions\")), __jsx(Table, {\n    tableHead: [\"#\", \"Name\", \"Job Position\", \"Since\", \"Salary\", \"Actions\"],\n    tableData: [[\"1\", \"Andrew Mike\", \"Develop\", \"2013\", \"€ 99,225\", fillButtons], [\"2\", \"John Doe\", \"Design\", \"2012\", \"€ 89,241\", roundButtons], [\"3\", \"Alex Mike\", \"Design\", \"2010\", \"€ 92,144\", simpleButtons], [\"4\", \"Mike Monday\", \"Marketing\", \"2013\", \"€ 49,990\", roundButtons], [\"5\", \"Paul Dickens\", \"Communication\", \"2015\", \"€ 69,201\", fillButtons]],\n    customCellClasses: [classes.textCenter, classes.textRight, classes.textRight],\n    customClassesForCells: [0, 4, 5],\n    customHeadCellClasses: [classes.textCenter, classes.textRight, classes.textRight],\n    customHeadClassesForCells: [0, 4, 5]\n  }), __jsx(\"h4\", null, __jsx(\"small\", null, \"Striped With Checkboxes\")), __jsx(Table, {\n    striped: true,\n    tableHead: [\"#\", \"\", \"Product Name\", \"Type\", \"Qty\", \"Price\", \"Amount\"],\n    tableData: [[\"1\", __jsx(Checkbox, {\n      key: 81267378,\n      checked: checked.indexOf(1) !== -1,\n      tabIndex: -1,\n      onClick: function onClick() {\n        return handleToggle(1);\n      },\n      checkedIcon: __jsx(Check, {\n        className: classes.checkedIcon\n      }),\n      icon: __jsx(Check, {\n        className: classes.uncheckedIcon\n      }),\n      classes: {\n        checked: classes.checked,\n        root: classes.checkRoot\n      }\n    }), \"Moleskine Agenda\", \"Office\", \"25\", \"€ 49\", \"€ 1,225\"], [\"2\", __jsx(Checkbox, {\n      key: 81267378,\n      checked: checked.indexOf(2) !== -1,\n      tabIndex: -1,\n      onClick: function onClick() {\n        return handleToggle(2);\n      },\n      checkedIcon: __jsx(Check, {\n        className: classes.checkedIcon\n      }),\n      icon: __jsx(Check, {\n        className: classes.uncheckedIcon\n      }),\n      classes: {\n        checked: classes.checked,\n        root: classes.checkRoot\n      }\n    }), \"Stabilo Pen\", \"Office\", \"30\", \"€ 10\", \"€ 300\"], [\"3\", __jsx(Checkbox, {\n      key: 564267512,\n      checked: checked.indexOf(3) !== -1,\n      tabIndex: -1,\n      onClick: function onClick() {\n        return handleToggle(3);\n      },\n      checkedIcon: __jsx(Check, {\n        className: classes.checkedIcon\n      }),\n      icon: __jsx(Check, {\n        className: classes.uncheckedIcon\n      }),\n      classes: {\n        checked: classes.checked,\n        root: classes.checkRoot\n      }\n    }), \"A4 Paper Pack\", \"Office\", \"50\", \"€ 10.99\", \"€ 109\"], [\"4\", __jsx(Checkbox, {\n      key: 5642675122,\n      checked: checked.indexOf(4) !== -1,\n      tabIndex: -1,\n      onClick: function onClick() {\n        return handleToggle(4);\n      },\n      checkedIcon: __jsx(Check, {\n        className: classes.checkedIcon\n      }),\n      icon: __jsx(Check, {\n        className: classes.uncheckedIcon\n      }),\n      classes: {\n        checked: classes.checked,\n        root: classes.checkRoot\n      }\n    }), \"Apple iPad\", \"Communication\", \"10\", \"€ 499.00\", \"€ 4,990\"], [\"5\", __jsx(Checkbox, {\n      key: 56426751223,\n      checked: checked.indexOf(5) !== -1,\n      tabIndex: -1,\n      onClick: function onClick() {\n        return handleToggle(5);\n      },\n      checkedIcon: __jsx(Check, {\n        className: classes.checkedIcon\n      }),\n      icon: __jsx(Check, {\n        className: classes.uncheckedIcon\n      }),\n      classes: {\n        checked: classes.checked,\n        root: classes.checkRoot\n      }\n    }), \"Apple iPhone\", \"Communication\", \"10\", \"€ 599.00\", \"€ 5,999\"], {\n      total: true,\n      colspan: \"5\",\n      amount: __jsx(\"span\", null, __jsx(\"small\", null, \"\\u20AC\"), \"12,999\")\n    }],\n    customCellClasses: [classes.textCenter, classes.padding0, classes.textRight, classes.textRight],\n    customClassesForCells: [0, 1, 5, 6],\n    customHeadCellClasses: [classes.textCenter, classes.textRight, classes.textRight],\n    customHeadClassesForCells: [0, 5, 6]\n  }))), __jsx(GridContainer, null, __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12\n  }, __jsx(\"h4\", null, \"Shopping Cart Table\")), __jsx(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12\n  }, __jsx(Table, {\n    tableHead: [\"\", \"PRODUCT\", \"COLOR\", \"SIZE\", \"PRICE\", \"QTY\", \"AMOUNT\", \"\"],\n    tableData: [[__jsx(\"div\", {\n      className: classes.imgContainer,\n      key: 875643\n    }, __jsx(\"img\", {\n      src: product1,\n      alt: \"...\",\n      className: classes.img\n    })), __jsx(\"span\", {\n      key: 8756431\n    }, __jsx(\"a\", {\n      href: \"#jacket\",\n      className: classes.tdNameAnchor\n    }, \"Spring Jacket\"), __jsx(\"br\", null), __jsx(\"small\", {\n      className: classes.tdNameSmall\n    }, \"by Dolce&Gabbana\")), \"Red\", \"M\", __jsx(\"span\", {\n      key: 8756432\n    }, __jsx(\"small\", {\n      className: classes.tdNumberSmall\n    }, \"\\u20AC\"), \" 549\"), __jsx(\"span\", {\n      key: 8756435\n    }, \"1\", \" \", __jsx(\"div\", {\n      className: classes.buttonGroup\n    }, __jsx(Button, {\n      color: \"info\",\n      size: \"sm\",\n      round: true,\n      className: classes.firstButton\n    }, __jsx(Remove, null)), __jsx(Button, {\n      color: \"info\",\n      size: \"sm\",\n      round: true,\n      className: classes.lastButton\n    }, __jsx(Add, null)))), __jsx(\"span\", {\n      key: 87564312\n    }, __jsx(\"small\", {\n      className: classes.tdNumberSmall\n    }, \"\\u20AC\"), \" 549\"), __jsx(Tooltip, {\n      key: 8756431234,\n      id: \"close1\",\n      title: \"Remove item\",\n      placement: \"left\",\n      classes: {\n        tooltip: classes.tooltip\n      }\n    }, __jsx(Button, {\n      link: true,\n      className: classes.actionButton\n    }, __jsx(Close, null)))], [__jsx(\"div\", {\n      className: classes.imgContainer,\n      key: 875643\n    }, __jsx(\"img\", {\n      src: product2,\n      alt: \"...\",\n      className: classes.img\n    })), __jsx(\"span\", {\n      key: 875643\n    }, __jsx(\"a\", {\n      href: \"#jacket\",\n      className: classes.tdNameAnchor\n    }, \"Short Pants\", \" \"), __jsx(\"br\", null), __jsx(\"small\", {\n      className: classes.tdNameSmall\n    }, \"by Gucci\")), \"Purple\", \"M\", __jsx(\"span\", {\n      key: 875643\n    }, __jsx(\"small\", {\n      className: classes.tdNumberSmall\n    }, \"\\u20AC\"), \" 499\"), __jsx(\"span\", {\n      key: 875643\n    }, \"2\", \" \", __jsx(\"div\", {\n      className: classes.buttonGroup\n    }, __jsx(Button, {\n      color: \"info\",\n      size: \"sm\",\n      round: true,\n      className: classes.firstButton\n    }, __jsx(Remove, null)), __jsx(Button, {\n      color: \"info\",\n      size: \"sm\",\n      round: true,\n      className: classes.lastButton\n    }, __jsx(Add, null)))), __jsx(\"span\", {\n      key: 875643\n    }, __jsx(\"small\", {\n      className: classes.tdNumberSmall\n    }, \"\\u20AC\"), \" 998\"), __jsx(Tooltip, {\n      key: 875643,\n      id: \"close2\",\n      title: \"Remove item\",\n      placement: \"left\",\n      classes: {\n        tooltip: classes.tooltip\n      }\n    }, __jsx(Button, {\n      link: true,\n      className: classes.actionButton\n    }, __jsx(Close, null)))], [__jsx(\"div\", {\n      className: classes.imgContainer,\n      key: 875643\n    }, __jsx(\"img\", {\n      src: product3,\n      alt: \"...\",\n      className: classes.img\n    })), __jsx(\"span\", {\n      key: 875643\n    }, __jsx(\"a\", {\n      href: \"#jacket\",\n      className: classes.tdNameAnchor\n    }, \"Pencil Skirt\"), __jsx(\"br\", null), __jsx(\"small\", {\n      className: classes.tdNameSmall\n    }, \"by Valentino\")), \"White\", \"XL\", __jsx(\"span\", {\n      key: 875643\n    }, __jsx(\"small\", {\n      className: classes.tdNumberSmall\n    }, \"\\u20AC\"), \" 799\"), __jsx(\"span\", {\n      key: 875643\n    }, \"1\", \" \", __jsx(\"div\", {\n      className: classes.buttonGroup\n    }, __jsx(Button, {\n      color: \"info\",\n      size: \"sm\",\n      round: true,\n      className: classes.firstButton\n    }, __jsx(Remove, null)), __jsx(Button, {\n      color: \"info\",\n      size: \"sm\",\n      round: true,\n      className: classes.lastButton\n    }, __jsx(Add, null)))), __jsx(\"span\", {\n      key: 875643\n    }, __jsx(\"small\", {\n      className: classes.tdNumberSmall\n    }, \"\\u20AC\"), \" 799\"), __jsx(Tooltip, {\n      key: 875643,\n      id: \"close3\",\n      title: \"Remove item\",\n      placement: \"left\",\n      classes: {\n        tooltip: classes.tooltip\n      }\n    }, __jsx(Button, {\n      link: true,\n      className: classes.actionButton\n    }, __jsx(Close, null)))], {\n      purchase: true,\n      colspan: \"3\",\n      amount: __jsx(\"span\", null, __jsx(\"small\", null, \"\\u20AC\"), \"2,346\"),\n      col: {\n        colspan: 3,\n        text: __jsx(Button, {\n          color: \"info\",\n          round: true\n        }, \"Complete Purchase \", __jsx(KeyboardArrowRight, null))\n      }\n    }],\n    tableShopping: true,\n    customHeadCellClasses: [classes.textCenter, classes.description, classes.description, classes.textCenter, classes.textRight, classes.textRight],\n    customHeadClassesForCells: [0, 2, 3, 4, 5, 6],\n    customCellClasses: [classes.tdName, classes.customFont, classes.customFont, classes.tdNumber + \" \" + classes.textCenter, classes.tdNumber + \" \" + classes.tdNumberAndButtonGroup, classes.tdNumber + \" \" + classes.textCenter],\n    customClassesForCells: [1, 2, 3, 4, 5, 6]\n  })))), __jsx(\"div\", {\n    className: classes.space50\n  }), __jsx(\"div\", {\n    id: \"comments\"\n  }, __jsx(\"div\", {\n    className: classes.title\n  }, __jsx(\"h3\", null, \"Comments\")), __jsx(GridContainer, null, __jsx(GridItem, {\n    xs: 12,\n    sm: 8,\n    md: 8,\n    className: classes.mlAuto + \" \" + classes.mrAuto\n  }, __jsx(\"div\", null, __jsx(\"h3\", {\n    className: classes.title + \" \" + classes.textCenter\n  }, \"10 Comments\"), __jsx(Media, {\n    avatar: avatar,\n    title: __jsx(\"span\", null, \"Tina Andrew \", __jsx(\"small\", null, \"\\xB7 7 minutes ago\")),\n    body: __jsx(\"span\", null, __jsx(\"p\", null, \"Chance too good. God level bars. I\", \"'\", \"m so proud of @LifeOfDesiigner #1 song in the country. Panda! Don\", \"'\", \"t be scared of the truth because we need to restart the human foundation in truth I stand with the most humility. We are so blessed!\"), __jsx(\"p\", null, \"All praises and blessings to the families of people who never gave up on dreams. Don\", \"'\", \"t forget, You\", \"'\", \"re Awesome!\")),\n    footer: __jsx(\"div\", null, __jsx(Tooltip, {\n      id: \"tooltip-tina\",\n      title: \"Reply to comment\",\n      placement: \"top\",\n      classes: {\n        tooltip: classes.tooltip\n      }\n    }, __jsx(Button, {\n      color: \"primary\",\n      simple: true,\n      className: classes.floatRight\n    }, __jsx(Reply, null), \" Reply\")), __jsx(Button, {\n      color: \"danger\",\n      simple: true,\n      className: classes.floatRight\n    }, __jsx(Favorite, null), \" 243\")),\n    innerMedias: [__jsx(Media, {\n      key: Math.random() * _Date$now(),\n      avatar: kendall,\n      body: __jsx(CustomInput, {\n        id: \"reply\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          multiline: true,\n          rows: 4,\n          placeholder: \" Write some nice stuff or nothing...\"\n        }\n      }),\n      footer: __jsx(Button, {\n        color: \"primary\",\n        className: classes.floatRight\n      }, __jsx(Reply, null), \" Reply\")\n    })]\n  }), __jsx(Media, {\n    avatar: marc,\n    title: __jsx(\"span\", null, \"John Camber \", __jsx(\"small\", null, \"\\xB7 Yesterday\")),\n    body: __jsx(\"span\", null, __jsx(\"p\", null, \"Hello guys, nice to have you on the platform! There will be a lot of great stuff coming soon. We will keep you posted for the latest news.\"), __jsx(\"p\", null, \"Don\", \"'\", \"t forget, You\", \"'\", \"re Awesome!\")),\n    footer: __jsx(\"div\", null, __jsx(Tooltip, {\n      id: \"tooltip-john\",\n      title: \"Reply to comment\",\n      placement: \"top\",\n      classes: {\n        tooltip: classes.tooltip\n      }\n    }, __jsx(Button, {\n      color: \"primary\",\n      simple: true,\n      className: classes.floatRight\n    }, __jsx(Reply, null), \" Reply\")), __jsx(Button, {\n      link: true,\n      className: classes.floatRight\n    }, __jsx(Favorite, null), \" 25\")),\n    innerMedias: [__jsx(Media, {\n      key: Math.random() * _Date$now(),\n      avatar: avatar,\n      title: __jsx(\"span\", null, \"Tina Andrew \", __jsx(\"small\", null, \"\\xB7 2 Days Ago\")),\n      body: __jsx(\"span\", null, __jsx(\"p\", null, \"Hello guys, nice to have you on the platform! There will be a lot of great stuff coming soon. We will keep you posted for the latest news.\"), __jsx(\"p\", null, \"Don\", \"'\", \"t forget, You\", \"'\", \"re Awesome!\")),\n      footer: __jsx(\"div\", null, __jsx(Tooltip, {\n        id: \"tooltip-tina2\",\n        title: \"Reply to comment\",\n        placement: \"top\",\n        classes: {\n          tooltip: classes.tooltip\n        }\n      }, __jsx(Button, {\n        color: \"primary\",\n        simple: true,\n        className: classes.floatRight\n      }, __jsx(Reply, null), \" Reply\")), __jsx(Button, {\n        simple: true,\n        color: \"danger\",\n        className: classes.floatRight\n      }, __jsx(Favorite, null), \" 243\"))\n    })]\n  }), __jsx(Media, {\n    key: Math.random() * _Date$now(),\n    avatar: avatar,\n    title: __jsx(\"span\", null, \"Rosa Thompson \", __jsx(\"small\", null, \"\\xB7 2 Days Ago\")),\n    body: __jsx(\"span\", null, __jsx(\"p\", null, \"Hello guys, nice to have you on the platform! There will be a lot of great stuff coming soon. We will keep you posted for the latest news.\"), __jsx(\"p\", null, \"Don\", \"'\", \"t forget, You\", \"'\", \"re Awesome!\")),\n    footer: __jsx(\"div\", null, __jsx(Tooltip, {\n      id: \"tooltip-tina2\",\n      title: \"Reply to comment\",\n      placement: \"top\",\n      classes: {\n        tooltip: classes.tooltip\n      }\n    }, __jsx(Button, {\n      color: \"primary\",\n      simple: true,\n      className: classes.floatRight\n    }, __jsx(Reply, null), \" Reply\")), __jsx(Button, {\n      simple: true,\n      color: \"danger\",\n      className: classes.floatRight\n    }, __jsx(Favorite, null), \" 243\"))\n  }), __jsx(\"div\", null, __jsx(Paginations, {\n    className: classes.textCenter + \" \" + classes.justifyContentCenter,\n    pages: [{\n      text: \"«\"\n    }, {\n      text: 1\n    }, {\n      text: 2\n    }, {\n      active: true,\n      text: 3\n    }, {\n      text: 4\n    }, {\n      text: 5\n    }, {\n      text: \"»\"\n    }],\n    color: \"primary\"\n  }))), __jsx(\"h3\", {\n    className: classes.textCenter\n  }, \"Post your comment \", __jsx(\"br\", null), __jsx(\"small\", null, \"- Logged In User -\")), __jsx(Media, {\n    avatar: avatar,\n    body: __jsx(CustomInput, {\n      id: \"logged\",\n      formControlProps: {\n        fullWidth: true\n      },\n      inputProps: {\n        multiline: true,\n        rows: 6,\n        placeholder: \" Write some nice stuff or nothing...\"\n      }\n    }),\n    footer: __jsx(Button, {\n      color: \"primary\",\n      className: classes.floatRight\n    }, __jsx(Reply, null), \" Reply\")\n  }), __jsx(\"h3\", {\n    className: classes.textCenter\n  }, \"Post your comment \", __jsx(\"br\", null), __jsx(\"small\", null, \"- Not Logged In User -\")), __jsx(Media, {\n    avatar: placeholder,\n    body: __jsx(\"div\", null, __jsx(GridContainer, null, __jsx(GridItem, {\n      xs: 12,\n      sm: 6,\n      md: 6\n    }, __jsx(CustomInput, {\n      id: \"not-logged-name\",\n      formControlProps: {\n        fullWidth: true\n      },\n      inputProps: {\n        placeholder: \"Your Name\"\n      }\n    })), __jsx(GridItem, {\n      xs: 12,\n      sm: 6,\n      md: 6\n    }, __jsx(CustomInput, {\n      id: \"not-logged-email\",\n      formControlProps: {\n        fullWidth: true\n      },\n      inputProps: {\n        placeholder: \"Your Email\"\n      }\n    }))), __jsx(CustomInput, {\n      id: \"not-logged-message\",\n      formControlProps: {\n        fullWidth: true\n      },\n      inputProps: {\n        multiline: true,\n        rows: 6,\n        placeholder: \" Write some nice stuff or nothing...\"\n      }\n    })),\n    footer: __jsx(\"div\", {\n      className: classes.signInButton\n    }, __jsx(\"h6\", null, \"SIGN IN WITH\"), __jsx(Button, {\n      justIcon: true,\n      round: true,\n      color: \"twitter\"\n    }, __jsx(\"i\", {\n      className: \"fab fa-twitter\"\n    })), __jsx(Button, {\n      justIcon: true,\n      round: true,\n      color: \"facebook\"\n    }, __jsx(\"i\", {\n      className: \"fab fa-facebook-square\"\n    })), __jsx(Button, {\n      justIcon: true,\n      round: true,\n      color: \"google\"\n    }, __jsx(\"i\", {\n      className: \"fab fa-google-plus-square\"\n    })), __jsx(Button, {\n      color: \"primary\",\n      className: classes.floatRight\n    }, \"Post comment\"))\n  })))));\n}","map":null,"metadata":{},"sourceType":"module"}