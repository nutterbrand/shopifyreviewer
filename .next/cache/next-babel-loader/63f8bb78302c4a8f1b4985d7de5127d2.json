{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport cx from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport styles from \"assets/jss/nextjs-material-kit-pro/components/tableStyle.js\";\nvar useStyles = makeStyles(styles);\nexport default function CustomTable(props) {\n  var tableHead = props.tableHead,\n      tableData = props.tableData,\n      tableHeaderColor = props.tableHeaderColor,\n      hover = props.hover,\n      colorsColls = props.colorsColls,\n      coloredColls = props.coloredColls,\n      customCellClasses = props.customCellClasses,\n      customClassesForCells = props.customClassesForCells,\n      striped = props.striped,\n      tableShopping = props.tableShopping,\n      customHeadCellClasses = props.customHeadCellClasses,\n      customHeadClassesForCells = props.customHeadClassesForCells;\n  var classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.tableResponsive\n  }, __jsx(Table, {\n    className: classes.table\n  }, tableHead !== undefined ? __jsx(TableHead, {\n    className: classes[tableHeaderColor]\n  }, __jsx(TableRow, {\n    className: classes.tableRow\n  }, tableHead.map(function (prop, key) {\n    var _cx;\n\n    var tableCellClasses = classes.tableHeadCell + \" \" + classes.tableCell + \" \" + cx((_cx = {}, _defineProperty(_cx, customHeadCellClasses[customHeadClassesForCells.indexOf(key)], customHeadClassesForCells.indexOf(key) !== -1), _defineProperty(_cx, classes.tableShoppingHead, tableShopping), _cx));\n    return __jsx(TableCell, {\n      className: tableCellClasses,\n      key: key\n    }, prop);\n  }))) : null, __jsx(TableBody, null, tableData.map(function (prop, key) {\n    var _cx2;\n\n    var rowColor = \"\";\n    var rowColored = false;\n\n    if (prop.color !== undefined) {\n      rowColor = prop.color;\n      rowColored = true;\n      prop = prop.data;\n    }\n\n    var tableRowClasses = cx((_cx2 = {}, _defineProperty(_cx2, classes.tableRowHover, hover), _defineProperty(_cx2, classes[rowColor + \"Row\"], rowColored), _defineProperty(_cx2, classes.tableStripedRow, striped && key % 2 === 0), _cx2));\n\n    if (prop.total) {\n      return __jsx(TableRow, {\n        key: key,\n        hover: hover,\n        className: tableRowClasses\n      }, __jsx(TableCell, {\n        className: classes.tableCell,\n        colSpan: prop.colspan\n      }), __jsx(TableCell, {\n        className: classes.tableCell + \" \" + classes.tableCellTotal\n      }, \"Total\"), __jsx(TableCell, {\n        className: classes.tableCell + \" \" + classes.tableCellAmount\n      }, prop.amount), tableHead.length - (prop.colspan - 0 + 2) > 0 ? __jsx(TableCell, {\n        className: classes.tableCell,\n        colSpan: tableHead.length - (prop.colspan - 0 + 2)\n      }) : null);\n    }\n\n    if (prop.purchase) {\n      return __jsx(TableRow, {\n        key: key,\n        hover: hover,\n        className: tableRowClasses\n      }, __jsx(TableCell, {\n        className: classes.tableCell,\n        colSpan: prop.colspan\n      }), __jsx(TableCell, {\n        className: classes.tableCell + \" \" + classes.tableCellTotal\n      }, \"Total\"), __jsx(TableCell, {\n        className: classes.tableCell + \" \" + classes.tableCellAmount\n      }, prop.amount), __jsx(TableCell, {\n        className: classes.tableCell + \" \" + classes.right,\n        colSpan: prop.col.colspan\n      }, prop.col.text));\n    }\n\n    return __jsx(TableRow, {\n      key: key,\n      hover: hover,\n      className: classes.tableRow + \" \" + tableRowClasses\n    }, prop.map(function (prop, key) {\n      var _cx3;\n\n      var tableCellClasses = classes.tableCell + \" \" + cx((_cx3 = {}, _defineProperty(_cx3, classes[colorsColls[coloredColls.indexOf(key)]], coloredColls.indexOf(key) !== -1), _defineProperty(_cx3, customCellClasses[customClassesForCells.indexOf(key)], customClassesForCells.indexOf(key) !== -1), _cx3));\n      return __jsx(TableCell, {\n        className: tableCellClasses,\n        key: key\n      }, prop);\n    }));\n  }))));\n}\nCustomTable.defaultProps = {\n  tableHeaderColor: \"gray\",\n  hover: false,\n  colorsColls: [],\n  coloredColls: [],\n  striped: false,\n  customCellClasses: [],\n  customClassesForCells: [],\n  customHeadCellClasses: [],\n  customHeadClassesForCells: []\n};","map":null,"metadata":{},"sourceType":"module"}